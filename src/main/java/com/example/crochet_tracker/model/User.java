package com.example.crochet_tracker.model;

////JPA annotations
import jakarta.persistence.*;
//Validating email format
import jakarta.validation.constraints.Email;
//Checking if fields are empty
import jakarta.validation.constraints.NotBlank;
//Validating field lengths
import jakarta.validation.constraints.Size;

//this ensures this class will be mapped to a database table
@Entity
//This is the table where the table values are stored
@Table(name = "users")
public class User {

    //marks this as the primary key
    @Id
    //this field should be generated by the database
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    //makes sure the field is not null
    @NotBlank(message = "Username is required")
    //validates length of the username
    @Size(min = 3, max = 50, message = "Username must be between 3 and 50 characters")
    //shows that this field will be mapped to the database column
    @Column(nullable = false, unique = true)
    private String username;

    //makes sure password feild is not empty
    @NotBlank(message = "Password is required")
    //ensures password is at least 6 characters
    @Size(min = 6, message = "Password must be at least 6 characters")
    @Column(nullable = false)
    private String password;

    @NotBlank(message = "Email is required")
    @Email(message = "Email should be valid")
    @Column(nullable = false, unique = true)
    private String email;

    //this sets the default value of the to 'USER', unless specified otherwise
    //use of least privilege
    @Column(nullable = false, columnDefinition = "VARCHAR(50) DEFAULT 'USER'") // Default role as 'USER'
    private String role;

    //default no argument constructor for JPA
    public User() {}

    //Constructor for the user object
    public User(String username, String password, String email, String role) {
        this.username = username;
        this.password = password;
        this.email = email;
        this.role = "USER";
    }


    // Getters and Setters

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    //provides a string representation of the user object
    //using for debugging, remove later
    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", username='" + username + '\'' +
                ", email='" + email + '\'' +
                ", role='" + role + '\'' +
                '}';
    }
}
